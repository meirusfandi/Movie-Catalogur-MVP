package com.example.root.moviecatalogue.adapter;import android.content.Context;import android.support.annotation.NonNull;import android.support.v7.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import com.example.root.moviecatalogue.baseMVP.RecyclerviewClickListener;import java.lang.reflect.Constructor;import java.lang.reflect.InvocationTargetException;import java.util.List;public abstract class MyAdapter<T, VH extends RecyclerView.ViewHolder> extends RecyclerView.Adapter<VH> {    private int layout;    private Context context;    private Class<VH> holder;    private List<T> movie;    private RecyclerviewClickListener clickListener;    public MyAdapter(int layout, Class<VH> holder, List<T> movie) {        this.layout = layout;        this.holder = holder;        this.movie = movie;    }    public MyAdapter(int layout, Class<VH> holder, List<T> movie, RecyclerviewClickListener clickListener) {        this.layout = layout;        this.holder = holder;        this.movie = movie;        this.clickListener = clickListener;    }    @NonNull    @Override    public VH onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        context = parent.getContext();        View view = LayoutInflater.from(context).inflate(layout, parent, false);        try {            Constructor<VH> constructor = holder.getConstructor(View.class);            return constructor.newInstance(view);        } catch (NoSuchMethodException e){            throw new RuntimeException(e);        } catch (InvocationTargetException e){            throw new RuntimeException(e);        } catch (InstantiationException e){            throw new RuntimeException(e);        } catch (IllegalAccessException e){            throw new RuntimeException(e);        }    }    @Override    public void onBindViewHolder(@NonNull final VH holder, int position) {        T model = movie.get(position);        bindView(holder, model, position);        holder.itemView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                int id = holder.getAdapterPosition();                clickListener.onItemClick(id);            }        });    }    @Override    public int getItemCount() {        return movie.size();    }    abstract protected void bindView(VH holder, T movie, int id);}